package adtestapplicationmenu;

import java.util.GregorianCalendar;
public class ADcontact {
   private String fName;
    private String lName;
    private String[] phoneNum;
    private String affiliation;
    private String occupation;
    private String note = "";
    private GregorianCalendar dob;
    private boolean blocked = false;  
    public ADcontact() {
        this.phoneNum = new String[5]; 
    }
     public ADcontact(String fName, String lName, String[] phoneNum, String affiliation,
                   String occupation, String note, GregorianCalendar dob) {
        this.fName = fName;
        this.lName = lName;
        this.phoneNum = phoneNum;
        this.affiliation = affiliation;
        this.occupation = occupation;
        this.note = note;
        this.dob = dob;
    }
     public ADcontact(String fName, String lName) {
        this.fName = fName;
        this.lName = lName;
        this.phoneNum = new String[5];
    }

    public String getfName() {
        return fName;
    }

    public void setfName(String fName) {
        this.fName = fName;
    }

    public String getlName() {
        return lName;
    }

    public void setlName(String lName) {
        this.lName = lName;
    }

    public String[] getPhoneNum() {
        return phoneNum;
    }

    public void setPhoneNum(String[] phoneNum) {
        this.phoneNum = phoneNum;
    }

    public String getAffiliation() {
        return affiliation;
    }

    public void setAffiliation(String affiliation) {
        this.affiliation = affiliation;
    }

    public String getOccupation() {
        return occupation;
    }

    public void setOccupation(String occupation) {
        this.occupation = occupation;
    }

    public String getNote() {
        return note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public GregorianCalendar getDob() {
        return dob;
    }

    public void setDob(GregorianCalendar dob) {
        this.dob = dob;
    }

    public boolean isBlocked() {
        return blocked;
    }

    public void setBlocked(boolean blocked) {
        this.blocked = blocked;
    }
      public void ADreplaceNumber(String oldNum, String newNum) {
        for (int i = 0; i < phoneNum.length; i++) {
            if (phoneNum[i] != null && phoneNum[i].equals(oldNum)) {
                phoneNum[i] = newNum;
                break;
            }
        }
      }
       @Override
    public String toString() {
        return "ADcontact{" +
                "fName='" + fName + '\'' +
                ", lName='" + lName + '\'' +
                ", phoneNum=" + String.join(", ", phoneNum) +
                ", affiliation='" + affiliation + '\'' +
                ", occupation='" + occupation + '\'' +
                ", note='" + note + '\'' +
                ", dob=" + dob.getTime() +
                ", blocked=" + blocked +
                '}';
    }

 
    
}
package adtestapplicationmenu;
import java.util.ArrayList;
import java.util.GregorianCalendar;

public class ADdirectory {
    private ArrayList<ADcontact> ADdirectory;
    private int num;
public ADdirectory() {
        this.ADdirectory = new ArrayList<>();
        this.num = 0;
    }
 public ADdirectory(ArrayList<ADcontact> ADdirectory) {
        this.ADdirectory = ADdirectory;
        this.num = ADdirectory.size();
    }

    public ArrayList<ADcontact> getADdirectory() {
        return ADdirectory;
    }

    public int getNum() {
        return num;
    }

    public void setADdirectory(ArrayList<ADcontact> ADdirectory) {
        this.ADdirectory = ADdirectory;
    }

    public void setNum(int num) {
        this.num = num;
    }

    @Override
    public String toString() {
        return "ADdirectory{" + "ADdirectory=" + ADdirectory + ", num=" + num + '}';
    }
  public void addADcontact(ADcontact c) {
        ADdirectory.add(c);
        num++;
    }
  public void addADcontact(String f, String l, String[] p, String a, String o, String n, GregorianCalendar dob) {
        ADcontact c = new ADcontact(f, l, p, a, o, n, dob);
        addADcontact(c);
    }
 public ADcontact search(String fName) {
        for (ADcontact c : ADdirectory) {
            if (c.getfName().equalsIgnoreCase(fName)) {
                return c;
            }
        }
        return null; 
    }
  public boolean deleteADcontact(String fName) {
        for (ADcontact c : ADdirectory) {
            if (c.getfName().equalsIgnoreCase(fName)) {
                ADdirectory.remove(c);
                num--;
                return true;
            }
        }
        return false; 
    }
}

package adtestapplicationmenu;


import java.util.GregorianCalendar;
import java.util.Scanner;
public class ADTestApplicationMenu {

    public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
        ADdirectory directory = new ADdirectory();
        
        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Add Contact");
            System.out.println("2. Search Contact");
            System.out.println("3. Delete a Contact");
            System.out.println("4. Replace a Number");
            System.out.println("5. Display All");
            System.out.println("6. Block a Number");
            System.out.println("7. Exit");
            System.out.print("Choose an option: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine();
            
            switch (choice) {
                case 1:
                    System.out.print("Enter first name: ");
                    String fName = scanner.nextLine();
                    System.out.print("Enter last name: ");
                    String lName = scanner.nextLine();
                    System.out.print("Enter phone numbers (comma-separated): ");
                    String[] phoneNums = scanner.nextLine().split(",");
                    System.out.print("Enter affiliation: ");
                    String affiliation = scanner.nextLine();
                    System.out.print("Enter occupation: ");
                    String occupation = scanner.nextLine();
                    System.out.print("Enter note: ");
                    String note = scanner.nextLine();
                    System.out.print("Enter date of birth (YYYY-MM-DD): ");
                    String dobInput = scanner.nextLine();
                    String[] dobParts = dobInput.split("-");
                    GregorianCalendar dob = new GregorianCalendar(
                            Integer.parseInt(dobParts[0]),
                            Integer.parseInt(dobParts[1]) - 1,
                            Integer.parseInt(dobParts[2]));
                    directory.addADcontact(fName, lName, phoneNums, affiliation, occupation, note, dob);
                    break;
                case 2:
                    System.out.print("Enter first name to search: ");
                    String searchName = scanner.nextLine();
                    ADcontact foundContact = directory.search(searchName);
                    if (foundContact != null) {
                        System.out.println("Found: " + foundContact);
                    } else {
                        System.out.println("Contact not found.");
                    }
                    break;
                case 3:
                    System.out.print("Enter first name to delete: ");
                    String deleteName = scanner.nextLine();
                    if (directory.deleteADcontact(deleteName)) {
                        System.out.println("Contact deleted.");
                    } else {
                        System.out.println("Contact not found.");
                    }
                    break;
                case 4:
                    System.out.print("Enter first name of the contact: ");
                    String replaceName = scanner.nextLine();
                    ADcontact replaceADcontact = directory.search(replaceName);
                    if (replaceADcontact != null) {
                        System.out.print("Enter old number: ");
                        String oldNum = scanner.nextLine();
                        System.out.print("Enter new number: ");
                        String newNum = scanner.nextLine();
                       replaceADcontact.ADreplaceNumber(oldNum, newNum);

                        System.out.println("Number replaced.");
                    } else {
                        System.out.println("Contact not found.");
                    }
                    break;
                case 5:
                    System.out.println("All Contacts:\n" + directory);
                    break;
                case 6:
                    System.out.print("Enter first name to block: ");
                    String blockName = scanner.nextLine();
                    ADcontact blockContact = directory.search(blockName);
                    if (blockContact != null) {
                        blockContact.setBlocked(true);
                        System.out.println("Contact blocked.");
                    } else {
                        System.out.println("Contact not found.");
                    }
                    break;
                case 7:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
} 


 

